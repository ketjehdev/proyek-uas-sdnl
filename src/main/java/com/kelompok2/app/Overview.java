/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.kelompok2.app;

import com.kelompok2.util.LinearCorrelation;
import com.kelompok2.util.Tree;
import java.awt.Color;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author LENOVO
 */
public class Overview extends javax.swing.JFrame {

    /**
     * Creates new form Overview
     */
    public Overview() {
        initComponents();
        chart.setTitle("UMP");
        chart.addLegend("amount", Color.red, Color.green);
        chart1.setTitle("Bahan Pangan");
        chart1.addLegend("amount", Color.green, Color.blue);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        curveLineChart1 = new com.kelompok2.chart.CurveLineChart();
        jFormattedTextField1 = new javax.swing.JFormattedTextField();
        jButton1 = new javax.swing.JButton();
        panelGradient1 = new com.kelompok2.panel.PanelGradient();
        panelGradient7 = new com.kelompok2.panel.PanelGradient();
        overviewClicked = new javax.swing.JLabel();
        panelGradient8 = new com.kelompok2.panel.PanelGradient();
        managemenData = new javax.swing.JLabel();
        panelGradient2 = new com.kelompok2.panel.PanelGradient();
        title = new javax.swing.JLabel();
        pannelTab = new javax.swing.JTabbedPane();
        overview = new com.kelompok2.panel.PanelGradient();
        chart = new com.kelompok2.chart.CurveLineChart();
        chart1 = new com.kelompok2.chart.CurveLineChart();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        managementData = new com.kelompok2.panel.PanelGradient();
        umpField = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        panganField = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        provinceCombo = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        createData = new javax.swing.JButton();
        deleteData = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tableData = new javax.swing.JTable();

        jFormattedTextField1.setText("jFormattedTextField1");

        jButton1.setText("jButton1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(0, 51, 255));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        panelGradient1.setBackground(new java.awt.Color(0, 0, 51));
        panelGradient1.setColorGradient(new java.awt.Color(19, 51, 89));

        panelGradient7.setBackground(new java.awt.Color(0, 0, 51));
        panelGradient7.setColorGradient(new java.awt.Color(19, 51, 89));

        overviewClicked.setBackground(new java.awt.Color(255, 255, 255));
        overviewClicked.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        overviewClicked.setForeground(new java.awt.Color(255, 255, 255));
        overviewClicked.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        overviewClicked.setText("OVERVIEW");
        overviewClicked.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                overviewClickedMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout panelGradient7Layout = new javax.swing.GroupLayout(panelGradient7);
        panelGradient7.setLayout(panelGradient7Layout);
        panelGradient7Layout.setHorizontalGroup(
            panelGradient7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelGradient7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(overviewClicked, javax.swing.GroupLayout.DEFAULT_SIZE, 168, Short.MAX_VALUE)
                .addContainerGap())
        );
        panelGradient7Layout.setVerticalGroup(
            panelGradient7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelGradient7Layout.createSequentialGroup()
                .addContainerGap(10, Short.MAX_VALUE)
                .addComponent(overviewClicked)
                .addContainerGap())
        );

        panelGradient1.add(panelGradient7);
        panelGradient7.setBounds(0, 80, 180, 30);

        panelGradient8.setBackground(new java.awt.Color(0, 0, 51));
        panelGradient8.setColorGradient(new java.awt.Color(19, 51, 89));

        managemenData.setBackground(new java.awt.Color(255, 255, 255));
        managemenData.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        managemenData.setForeground(new java.awt.Color(255, 255, 255));
        managemenData.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        managemenData.setText("MANAGEMENT DATA");
        managemenData.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                managemenDataMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout panelGradient8Layout = new javax.swing.GroupLayout(panelGradient8);
        panelGradient8.setLayout(panelGradient8Layout);
        panelGradient8Layout.setHorizontalGroup(
            panelGradient8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(managemenData, javax.swing.GroupLayout.DEFAULT_SIZE, 180, Short.MAX_VALUE)
        );
        panelGradient8Layout.setVerticalGroup(
            panelGradient8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelGradient8Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(managemenData)
                .addContainerGap(10, Short.MAX_VALUE))
        );

        panelGradient1.add(panelGradient8);
        panelGradient8.setBounds(0, 120, 180, 30);

        getContentPane().add(panelGradient1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 180, 600));

        panelGradient2.setBackground(new java.awt.Color(19, 51, 89));
        panelGradient2.setForeground(new java.awt.Color(24, 43, 61));
        panelGradient2.setColorGradient(new java.awt.Color(0, 0, 51));

        title.setBackground(new java.awt.Color(255, 255, 255));
        title.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        title.setForeground(new java.awt.Color(255, 255, 255));
        title.setText("Overview");
        panelGradient2.add(title);
        title.setBounds(20, 10, 120, 50);

        getContentPane().add(panelGradient2, new org.netbeans.lib.awtextra.AbsoluteConstraints(171, 0, 680, 70));

        overview.setBackground(new java.awt.Color(187, 187, 187));
        overview.setColorGradient(new java.awt.Color(0, 0, 51));

        chart.setBackground(new java.awt.Color(0, 0, 0));
        chart.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        chart.setForeground(new java.awt.Color(0, 0, 0));
        overview.add(chart);
        chart.setBounds(100, 20, 270, 210);

        chart1.setBackground(new java.awt.Color(0, 0, 0));
        chart1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        chart1.setForeground(new java.awt.Color(0, 0, 0));
        overview.add(chart1);
        chart1.setBounds(400, 20, 300, 210);

        jTable1.setBackground(new java.awt.Color(255, 255, 255));
        jTable1.setForeground(new java.awt.Color(255, 255, 255));
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        overview.add(jScrollPane1);
        jScrollPane1.setBounds(90, 240, 620, 270);

        pannelTab.addTab("tab1", overview);

        managementData.setBackground(new java.awt.Color(187, 187, 187));
        managementData.setColorGradient(new java.awt.Color(0, 0, 51));

        umpField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                umpFieldActionPerformed(evt);
            }
        });
        managementData.add(umpField);
        umpField.setBounds(330, 40, 140, 30);

        jLabel1.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Masukkan harga UMP :");
        managementData.add(jLabel1);
        jLabel1.setBounds(330, 20, 140, 14);

        panganField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                panganFieldActionPerformed(evt);
            }
        });
        managementData.add(panganField);
        panganField.setBounds(520, 40, 160, 30);

        jLabel2.setBackground(new java.awt.Color(255, 255, 255));
        jLabel2.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Masukkan harga bahan pangan :");
        managementData.add(jLabel2);
        jLabel2.setBounds(510, 20, 180, 14);

        provinceCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Banten", "DKI Jakarta", "Jawa Barat", "Jawa Tengah", "DI Yogyakarta", "Jawa Timur" }));
        managementData.add(provinceCombo);
        provinceCombo.setBounds(130, 40, 130, 30);

        jLabel3.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Pilih provinsi :");
        managementData.add(jLabel3);
        jLabel3.setBounds(100, 20, 180, 14);

        createData.setBackground(new java.awt.Color(0, 255, 51));
        createData.setForeground(new java.awt.Color(0, 0, 102));
        createData.setText("CREATE");
        createData.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createDataActionPerformed(evt);
            }
        });
        managementData.add(createData);
        createData.setBounds(330, 90, 350, 40);

        deleteData.setBackground(new java.awt.Color(255, 0, 0));
        deleteData.setForeground(new java.awt.Color(0, 0, 102));
        deleteData.setText("DELETE");
        deleteData.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteDataActionPerformed(evt);
            }
        });
        managementData.add(deleteData);
        deleteData.setBounds(130, 90, 180, 40);

        tableData.setBackground(new java.awt.Color(255, 255, 255));
        tableData.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Provinsi", "UMP", "Harga Bahan Pangan"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tableData.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableDataMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tableData);

        managementData.add(jScrollPane2);
        jScrollPane2.setBounds(130, 152, 550, 340);

        pannelTab.addTab("tab2", managementData);

        getContentPane().add(pannelTab, new org.netbeans.lib.awtextra.AbsoluteConstraints(111, 38, 740, 560));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void overviewClickedMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_overviewClickedMouseClicked
        // TODO add your handling code here:
        pannelTab.setSelectedIndex(0);
    }//GEN-LAST:event_overviewClickedMouseClicked

    private void managemenDataMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_managemenDataMouseClicked
        // TODO add your handling code here:
        pannelTab.setSelectedIndex(1);
    }//GEN-LAST:event_managemenDataMouseClicked

    private void umpFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_umpFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_umpFieldActionPerformed

    private void panganFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_panganFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_panganFieldActionPerformed

    private void deleteDataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteDataActionPerformed
        // TODO add your handling code here:
        try {
            if (provinceCombo.getSelectedItem().toString().isBlank()) {
                throw new Exception("Tidak ada pilihan data yang ingin dihapus!");
            }
            
            for (String item : provinceList) {
                if(!item.equals(provinceCombo.getSelectedItem().toString())) {
                    throw new Exception("Tidak ada data provinsi yang dihapus");
                }
            }
            
            provinceList.remove(provinceCombo.getSelectedItem().toString());
            
            umpTree.delete(Integer.parseInt(umpField.getText()));
            panganTree.delete(Integer.parseInt(panganField.getText()));
            
            umpList.remove(Integer.parseInt(umpField.getText()));
            panganList.remove(Integer.parseInt(panganField.getText()));
            
            JOptionPane.showMessageDialog(null, "Data telah dihapus");
            resetTextField();
            getData();
        } catch (Exception e) {
            System.out.println(e.getMessage());
            JOptionPane.showMessageDialog(null, e.getMessage(), "Terjadi Kesalahan", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_deleteDataActionPerformed

    private void createDataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createDataActionPerformed
        // TODO add your handling code here:
        try {
            String province = provinceCombo.getSelectedItem().toString();
            String ump = umpField.getText();
            String pangan = panganField.getText();

            if (ump.isBlank() || pangan.isBlank()) {
                throw new Exception("Kolom input tidak boleh kosong!");
            }
            
            if(!ump.matches("\\d+") || !ump.matches("\\d+")) {
                throw new Exception("UMP atau harga pangan harus numerik!");
            }
            
            for(String item : provinceList) {
                if(item.equals(province)) {
                    throw new Exception("Data provinsi sudah ada!");
                }
            }
            
            Integer umpPrice = Integer.valueOf(ump);
            Integer panganPrice = Integer.valueOf(pangan);

            provinceList.add(province);
            umpTree.insert(umpPrice);
            panganTree.insert(panganPrice);
            
            umpList.add(Double.valueOf(umpPrice));
            panganList.add(Double.valueOf(panganPrice));
            
            double correlation = LinearCorrelation.calculateCorrelation(umpList, panganList);
            
            System.out.println(correlation);
            
            treeList.add(ump);
            treeList.add(pangan);
            
            JOptionPane.showMessageDialog(null, "Data berhasil ditambahkan");
            
            getData();
            resetTextField();
        } catch (Exception e) {
            System.out.println(e.getMessage());
            JOptionPane.showMessageDialog(null, e.getMessage(), "Terjadi Kesalahan", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_createDataActionPerformed

    private void tableDataMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableDataMouseClicked
        // TODO add your handling code here:
        int row = tableData.getSelectedRow();
        DefaultTableModel model = (DefaultTableModel) tableData.getModel();
        
        provinceCombo.setEnabled(false);
        
        provinceCombo.setSelectedItem(model.getValueAt(row, 0).toString());
        umpField.setText(model.getValueAt(row, 1).toString());
        panganField.setText(model.getValueAt(row, 2).toString());
    }//GEN-LAST:event_tableDataMouseClicked

    private void getData() {
        try {
            // Check if data is null or empty
            DefaultTableModel model = (DefaultTableModel) tableData.getModel();
            model.setRowCount(0); // Clear existing rows

            for (int i = 0; i < provinceList.size(); i++) {
                String province = provinceList.get(i);
                String ump = treeList.get(i*2);
                String pangan = treeList.get(i*2+1);
                
                String row[] = {province, ump, pangan};
                model.addRow(row);
            }
        } catch (Exception e) {
            System.out.println(e.getMessage());
            JOptionPane.showMessageDialog(null, e.getMessage());
        }
    }

    private void resetTextField() {
        provinceCombo.setEnabled(true);
        provinceCombo.setSelectedItem("Banten");
        umpField.setText("");
        panganField.setText("");
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Overview.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Overview.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Overview.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Overview.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new Overview().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.kelompok2.chart.CurveLineChart chart;
    private com.kelompok2.chart.CurveLineChart chart1;
    private javax.swing.JButton createData;
    private com.kelompok2.chart.CurveLineChart curveLineChart1;
    private javax.swing.JButton deleteData;
    private javax.swing.JButton jButton1;
    private javax.swing.JFormattedTextField jFormattedTextField1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel managemenData;
    private com.kelompok2.panel.PanelGradient managementData;
    private com.kelompok2.panel.PanelGradient overview;
    private javax.swing.JLabel overviewClicked;
    private com.kelompok2.panel.PanelGradient panelGradient1;
    private com.kelompok2.panel.PanelGradient panelGradient2;
    private com.kelompok2.panel.PanelGradient panelGradient7;
    private com.kelompok2.panel.PanelGradient panelGradient8;
    private javax.swing.JTextField panganField;
    private javax.swing.JTabbedPane pannelTab;
    private javax.swing.JComboBox<String> provinceCombo;
    private javax.swing.JTable tableData;
    private javax.swing.JLabel title;
    private javax.swing.JTextField umpField;
    // End of variables declaration//GEN-END:variables
    private final ArrayList<String> treeList = new ArrayList<>();
    private final ArrayList<String> provinceList = new ArrayList<>();
    private final Tree umpTree = new Tree();
    private final Tree panganTree = new Tree();
    private final ArrayList<Double> umpList = new ArrayList<>();
    private final ArrayList<Double> panganList = new ArrayList<>();
}
